<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://doctorraz.github.io/folio/feed.xml" rel="self" type="application/atom+xml"/><link href="https://doctorraz.github.io/folio/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-08-06T19:24:14+00:00</updated><id>https://doctorraz.github.io/folio/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">New Post</title><link href="https://doctorraz.github.io/folio/blog/2025/new-post/" rel="alternate" type="text/html" title="New Post"/><published>2025-08-06T00:00:00+00:00</published><updated>2025-08-06T00:00:00+00:00</updated><id>https://doctorraz.github.io/folio/blog/2025/new-post</id><content type="html" xml:base="https://doctorraz.github.io/folio/blog/2025/new-post/"><![CDATA[<h1 id="новый-пост">новый пост</h1> <p>пиздец пиздецовый</p>]]></content><author><name></name></author><summary type="html"><![CDATA[новый пост]]></summary></entry><entry><title type="html">nanoCAD. Установка без инсталлятора</title><link href="https://doctorraz.github.io/folio/blog/2025/installing-nanocad-without-an-installer/" rel="alternate" type="text/html" title="nanoCAD. Установка без инсталлятора"/><published>2025-08-05T15:09:00+00:00</published><updated>2025-08-05T15:09:00+00:00</updated><id>https://doctorraz.github.io/folio/blog/2025/installing-nanocad-without-an-installer</id><content type="html" xml:base="https://doctorraz.github.io/folio/blog/2025/installing-nanocad-without-an-installer/"><![CDATA[<blockquote> <p>Все ниже написанное Вы повторяете на свой страх и риск<br/> Статья ни в коем случае не является призывом к чему бы то ни было, <br/> но если больше никак, то можно и так <br/> Информация опубликована в ознакомительных целях</p> </blockquote> <p>Нанокад разработка иногда балует пользователей <strong>Beta</strong> версиями своего чудесного nanoCAD`а.<br/> Для меня участие в тестировании вопрос принципиальный, ибо пока еще верю,<br/> что сообщая разработчику о багах, приближаю тот светлый день, когда nanoCAD станет если не идеальным,<br/> то хотя бы лучшим CAD’ом всех времен и народов, ну или в нем будет меньше невынужденных ошибок</p> <p>Все ниже написанное должно получиться если на машине уже установлены:</p> <blockquote> <ul> <li>nanoCAD предыдущей версии, желательно не сильно древней (максимум на мажор минор младше)</li> <li>PostgreSQL и (или) SQLlite</li> </ul> </blockquote> <h3 id="для-чего-этот-вот-все">Для чего этот вот все?</h3> <p>Служба ИТО предприятия не то что бету тестовую, нужный рабочий софт установить или обновить не допросишься.<br/> Поэтому все приходится делать самому.</p> <h4 id="что-надо">Что надо?</h4> <ul> <li>дистрибутив nanoCAD</li> <li>доступ к Regedit и в ветку в <code class="language-plaintext highlighter-rouge">HKEY_CURRENT_USER</code></li> <li>донор - компьютер на котором у нас есть права админа или виртуальная машина</li> <li>возможность скопировать на машину - реципиента файлы с донора</li> <li>прямые руки и не бояться, сломать все равно ничего не выйдет</li> </ul> <p>Если все это в наличии, читаем дальше</p> <h4 id="что-делать">Что делать?</h4> <p>на примере nanoCAD <strong>25.1</strong></p> <ol> <li>Инсталлируем nanoCAD на машине на которой у нас есть права</li> <li>По одному разу запускаем все модули, платформу, СПДС, Механику.</li> <li>Закрываем nanoCAD’ы</li> <li>Открываем редактор реестра <code class="language-plaintext highlighter-rouge">Regedit</code> и экспортируем ветку реестра <code class="language-plaintext highlighter-rouge">HKEY_CURRENT_USER\SOFTWARE\Nanosoft\nanoCAD x64\25.1</code></li> <li>Идем в <code class="language-plaintext highlighter-rouge">c:\Users\Default\Desktop\</code> копируем ярлычки <em>СПДС</em> и <em>Механики</em> (ярлык платформы не нужен)</li> </ol> <p>С донора копируем каталоги:</p> <ul> <li><code class="language-plaintext highlighter-rouge">%AppData%\Roaming\Nanosoft\nanoCAD x64 25.1\</code> на реципиента в аналогичный каталог <code class="language-plaintext highlighter-rouge">%AppData%\Roaming\Nanosoft\nanoCAD x64 25.1\</code></li> <li><code class="language-plaintext highlighter-rouge">%ProgramData%\Nanosoft\nanoCAD x64 25.1\</code> на реципиента в аналогичный каталог <code class="language-plaintext highlighter-rouge">%ProgramData%\Nanosoft\nanoCAD x64 25.1\</code></li> <li><code class="language-plaintext highlighter-rouge">%ProgramFiles%\Nanosoft\nanoCAD x64 25.1\</code> в любой каталог реципиента, нежелательны длинные пути с кириллицей и пробелами (с кириллицей и пробелами то же получится, но мало ли)</li> </ul> <blockquote> <p>я скопировал сюда <code class="language-plaintext highlighter-rouge">d:\ProgFiles\Nanosoft\nanoCAD x64 25.1\</code></p> </blockquote> <ul> <li>пути в реестре для <code class="language-plaintext highlighter-rouge">%AppDAta%</code> меняем на реальные <br/> открываем в текстовом редакторе наш сохраненный в п.4 *.reg, выполняем поиск и замену:</li> </ul> <table> <thead> <tr> <th>Что меняем</th> <th>На что меняем</th> </tr> </thead> <tbody> <tr> <td>путь к моему профилю на доноре</td> <td>путь к моему профилю на реципиенте</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">C:\\Users\\dRz\\</code></td> <td><code class="language-plaintext highlighter-rouge">c:\\Users\\razygraevaa\\</code></td> </tr> </tbody> </table> <ul> <li> <p>сохраняем файл реестра, закрываем блокнот</p> </li> <li> <p>двойным кликом по *.reg отправляем данные в реестр реципиента</p> </li> </ul> <p>на этом подготовка закончена</p> <h3 id="как-запустить-нану">Как запустить нану</h3> <p>Редактируем ярлыки из п.5 , прописываем в них правильные пути до <code class="language-plaintext highlighter-rouge">nCadS.exe</code>, <code class="language-plaintext highlighter-rouge">nCadM.exe</code><br/> Для <code class="language-plaintext highlighter-rouge">nCad.exe</code> проще сделать новый ярлык</p> <blockquote> <p>с такого батника запускаю СПДС</p> <div class="language-bat highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">:loop</span>
<span class="s2">"d:\ProgFiles\Nanosoft\nanoCAD x64 25.1\nCadS.exe"</span> <span class="na">-b </span><span class="kd">nSPDSComp</span> <span class="na">-r </span><span class="kd">SPDS</span> <span class="na">-a </span><span class="kd">nanoCAD_x64_SPDS_25</span>.1 <span class="na">-oleid </span><span class="o">{</span><span class="m">729</span><span class="kd">C2166</span><span class="na">-C</span><span class="m">825</span><span class="o">-</span><span class="m">455</span><span class="kd">C</span><span class="o">-</span><span class="m">80</span><span class="kd">F0</span><span class="o">-</span><span class="m">5</span><span class="kd">E5F48C23E8E</span><span class="o">}</span>
<span class="c">REM pause</span>
<span class="k">goto</span> <span class="kd">loop</span>
</code></pre></div> </div> <p>удобно, один нана упал, сразу новый поднимается))</p> </blockquote> <p>Запускаем с ярлыков nanoCAD`ы, донастраиваем, под себя.</p> <blockquote> <p>если возникнут сложности с подключением к nanoCAD’у …</p> <ul> <li>Excel</li> <li>проблемы vla vlax</li> <li>и прочие непонятки с COM</li> </ul> <p>зарегистрировать COM сервер nanoCAD<br/> открываем командную строку</p> <p>на примере СПДС, для других модулей аналогично<br/> выполняем команду</p> <div class="language-bat highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s2">"d:\ProgFiles\Nanosoft\nanoCAD x64 25.1\nCadS.exe"</span> <span class="na">/register
</span></code></pre></div> </div> </blockquote> <blockquote> <p>а что же делать с отсутствующей веткой <code class="language-plaintext highlighter-rouge">HKEY_LOCAL_MACHINE\SOFTWARE\Nanosoft\nanoCAD x64\25.1</code> <br/> воскликнет пытливый читатель?<br/> Да ничего ответит писатель, максимальный глюк и неудобство это то что нана будет неправильно показывать номер свой сборки в окне о программе ))</p> </blockquote> <blockquote> <p>[!IMPORTANT] update 31.07.2025<br/> Специально проверил<br/> Свежеустановленную сборку переместил на другой диск, в другой каталог<br/> Все стартует запускается, как часы<br/> Думаю это не моя заслуга , а linux для простоты работы под вайном, нанокад с легкостью ищет нужное вокруг себя по относительным путям</p> </blockquote> <blockquote> <p>[!Note] у nanoCAD все уже есть для того что бы стать полноценным портабле, но<br/> nanoCAD без путей не понимает где искать</p> <ul> <li><code class="language-plaintext highlighter-rouge">UserDataDir</code> -пользовательский каталог с настройками</li> <li><code class="language-plaintext highlighter-rouge">CorpOptions.xml</code> - корпоративные настройки мультикад для платформы, СПДС и Механики</li> <li><code class="language-plaintext highlighter-rouge">LogFile</code> - куда вести лог</li> <li><code class="language-plaintext highlighter-rouge">ToolbarSettings</code> - настройки панелей, положение видимость и т.п. -<code class="language-plaintext highlighter-rouge">AppOptions.xml</code> - настройки мультикад для платформы, СПДС и Механики <blockquote> <p>без <code class="language-plaintext highlighter-rouge">AppOptions.xml</code> крашится настройка оформления и все с ней связанное…</p> <ul> <li>подключение к БД</li> <li>масштабы</li> <li>возможно, что то еще</li> </ul> </blockquote> </li> </ul> <p>Поэтому приходится редактировать реестр</p> </blockquote> <h2 id="возможные-проблемы-и-решения">Возможные проблемы и решения</h2> <h3 id="в-nanocad-не-открываются-настройки-оформления-в-списке-масштабов-странное-число">В nanoCAD не открываются настройки оформления, в списке масштабов странное число…</h3> <p>скорей всего не загрузился <code class="language-plaintext highlighter-rouge">AppOptions.xml</code><br/> Причин всего две нет записи в реестре с путем к этому файлу <br/> на примере СПДС<br/> этой записи нет:</p> <pre><code class="language-reg">[HKEY_CURRENT_USER\SOFTWARE\Nanosoft\nanoCAD x64\25.1\NanoSPDS\MCSParams]
"SPDS.AppOptions_ru-RU"="D:\\setup\\nCAD\\SPDS.AppOptionsNana.xml"
</code></pre> <p>Запись в реестре есть, нет файла по этому пути<br/> Проверку рекомендую начать с реестра, если параметра нет, <br/> то создаем строковый параметр со значением путь до реального файла AppOptions.xml<br/> <br/> Если нет файла <code class="language-plaintext highlighter-rouge">AppOptions.xml</code>, <br/> взять этот файл и другие недостающие (например для СПДС) можно в <code class="language-plaintext highlighter-rouge">%ProgramData%\Nanosoft\nanoCAD x64 25.1\NanoSPDS\UserTemplates\ru-RU\</code></p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[proba]]></summary></entry><entry><title type="html">1000 post with vega lite</title><link href="https://doctorraz.github.io/folio/blog/2025/test/" rel="alternate" type="text/html" title="1000 post with vega lite"/><published>2025-08-05T00:20:00+00:00</published><updated>2025-08-05T00:20:00+00:00</updated><id>https://doctorraz.github.io/folio/blog/2025/test</id><content type="html" xml:base="https://doctorraz.github.io/folio/blog/2025/test/"><![CDATA[<p>This is an example post with some <br/> This plot supports both light and dark themes.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included vega lite code could look like]]></summary></entry><entry><title type="html">Test Tables post</title><link href="https://doctorraz.github.io/folio/blog/2025/tables-new/" rel="alternate" type="text/html" title="Test Tables post"/><published>2025-06-08T18:37:00+00:00</published><updated>2025-06-08T18:37:00+00:00</updated><id>https://doctorraz.github.io/folio/blog/2025/tables-new</id><content type="html" xml:base="https://doctorraz.github.io/folio/blog/2025/tables-new/"><![CDATA[<p>Using markdown to display tables is easy.</p> <h2 id="simple-example">Simple Example</h2> <p>First, add the following to the post’s front matter</p> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">pretty_table</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div> <p>Then, the following syntax</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| Left aligned | Center aligned | Right aligned |
| :----------- | :------------: | ------------: |
| Left 1       |    center 1    |       right 1 |
| Left 2       |    center 2    |       right 2 |
| Left 3       |    center 3    |       right 3 |
</code></pre></div></div> <p>will generate</p> <table> <thead> <tr> <th style="text-align: left">Left aligned</th> <th style="text-align: center">Center aligned</th> <th style="text-align: right">Right aligned</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">Left 1</td> <td style="text-align: center">center 1</td> <td style="text-align: right">right 1</td> </tr> <tr> <td style="text-align: left">Left 2</td> <td style="text-align: center">center 2</td> <td style="text-align: right">right 2</td> </tr> <tr> <td style="text-align: left">Left 3</td> <td style="text-align: center">center 3</td> <td style="text-align: right">right 3</td> </tr> </tbody> </table> <p></p> <h2 id="html-example">HTML Example</h2> <p>It is also possible to use HTML to display tables. For example, the following HTML code will display a table with <a href="https://bootstrap-table.com/">Bootstrap Table</a>, loaded from a JSON file:</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;table</span> <span class="na">id=</span><span class="s">"table"</span> <span class="na">data-toggle=</span><span class="s">"table"</span> <span class="na">data-url=</span><span class="s">"{{ '/assets/json/table_data.json' | relative_url }}"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;thead&gt;</span>
    <span class="nt">&lt;tr&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-field=</span><span class="s">"id"</span><span class="nt">&gt;</span>ID<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-field=</span><span class="s">"name"</span><span class="nt">&gt;</span>Item Name<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-field=</span><span class="s">"price"</span><span class="nt">&gt;</span>Item Price<span class="nt">&lt;/th&gt;</span>
    <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;/thead&gt;</span>
<span class="nt">&lt;/table&gt;</span>
</code></pre></div></div> <table data-toggle="table" data-url="/folio/assets/json/table_data.json"> <thead> <tr> <th data-field="id">ID</th> <th data-field="name">Item Name</th> <th data-field="price">Item Price</th> </tr> </thead> </table> <p></p> <h2 id="more-complex-example">More Complex Example</h2> <p>By using <a href="https://bootstrap-table.com/">Bootstrap Table</a> it is possible to create pretty complex tables, with pagination, search, and more. For example, the following HTML code will display a table, loaded from a JSON file, with pagination, search, checkboxes, and header/content alignment. For more information, check the <a href="https://examples.bootstrap-table.com/index.html">documentation</a>.</p> <div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;table</span>
  <span class="na">data-click-to-select=</span><span class="s">"true"</span>
  <span class="na">data-height=</span><span class="s">"460"</span>
  <span class="na">data-pagination=</span><span class="s">"true"</span>
  <span class="na">data-search=</span><span class="s">"true"</span>
  <span class="na">data-toggle=</span><span class="s">"table"</span>
  <span class="na">data-url=</span><span class="s">"{{ '/assets/json/table_data.json' | relative_url }}"</span>
<span class="nt">&gt;</span>
  <span class="nt">&lt;thead&gt;</span>
    <span class="nt">&lt;tr&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-checkbox=</span><span class="s">"true"</span><span class="nt">&gt;&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-field=</span><span class="s">"id"</span> <span class="na">data-halign=</span><span class="s">"left"</span> <span class="na">data-align=</span><span class="s">"center"</span> <span class="na">data-sortable=</span><span class="s">"true"</span><span class="nt">&gt;</span>ID<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-field=</span><span class="s">"name"</span> <span class="na">data-halign=</span><span class="s">"center"</span> <span class="na">data-align=</span><span class="s">"right"</span> <span class="na">data-sortable=</span><span class="s">"true"</span><span class="nt">&gt;</span>Item Name<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">data-field=</span><span class="s">"price"</span> <span class="na">data-halign=</span><span class="s">"right"</span> <span class="na">data-align=</span><span class="s">"left"</span> <span class="na">data-sortable=</span><span class="s">"true"</span><span class="nt">&gt;</span>Item Price<span class="nt">&lt;/th&gt;</span>
    <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;/thead&gt;</span>
<span class="nt">&lt;/table&gt;</span>
</code></pre></div></div> <table data-click-to-select="true" data-height="460" data-pagination="true" data-search="true" data-toggle="table" data-url="/folio/assets/json/table_data.json"> <thead> <tr> <th data-checkbox="true"></th> <th data-field="id" data-halign="left" data-align="center" data-sortable="true">ID</th> <th data-field="name" data-halign="center" data-align="right" data-sortable="true">Item Name</th> <th data-field="price" data-halign="right" data-align="left" data-sortable="true">Item Price</th> </tr> </thead> </table>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="tables"/><summary type="html"><![CDATA[an example of how to use Bootstrap Tables]]></summary></entry><entry><title type="html">a post with plotly.js</title><link href="https://doctorraz.github.io/folio/blog/2025/plotly/" rel="alternate" type="text/html" title="a post with plotly.js"/><published>2025-03-26T14:24:00+00:00</published><updated>2025-03-26T14:24:00+00:00</updated><id>https://doctorraz.github.io/folio/blog/2025/plotly</id><content type="html" xml:base="https://doctorraz.github.io/folio/blog/2025/plotly/"><![CDATA[<p>This is an example post with some <a href="https://plotly.com/javascript/">plotly</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">plotly
</span><span class="sb">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "type": "scatter"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [16, 5, 11, 9],
      "type": "scatter"
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-plotly">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "type": "scatter"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [16, 5, 11, 9],
      "type": "scatter"
    }
  ]
}
</code></pre> <p>Also another example chart.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">plotly
</span><span class="sb">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "mode": "markers"
    },
    {
      "x": [2, 3, 4, 5],
      "y": [16, 5, 11, 9],
      "mode": "lines"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [12, 9, 15, 12],
      "mode": "lines+markers"
    }
  ],
  "layout": {
    "title": {
      "text": "Line and Scatter Plot"
    }
  }
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>This is how it looks like:</p> <pre><code class="language-plotly">{
  "data": [
    {
      "x": [1, 2, 3, 4],
      "y": [10, 15, 13, 17],
      "mode": "markers"
    },
    {
      "x": [2, 3, 4, 5],
      "y": [16, 5, 11, 9],
      "mode": "lines"
    },
    {
      "x": [1, 2, 3, 4],
      "y": [12, 9, 15, 12],
      "mode": "lines+markers"
    }
  ],
  "layout": {
    "title": {
      "text": "Line and Scatter Plot"
    }
  }
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included plotly.js code could look like]]></summary></entry><entry><title type="html">a post with image galleries</title><link href="https://doctorraz.github.io/folio/blog/2024/photo-gallery/" rel="alternate" type="text/html" title="a post with image galleries"/><published>2024-12-04T01:59:00+00:00</published><updated>2024-12-04T01:59:00+00:00</updated><id>https://doctorraz.github.io/folio/blog/2024/photo-gallery</id><content type="html" xml:base="https://doctorraz.github.io/folio/blog/2024/photo-gallery/"><![CDATA[<p>The images in this post are all zoomable, arranged into different mini-galleries using different libraries.</p> <h2 id="lightbox2"><a href="https://lokeshdhakar.com/projects/lightbox2/">Lightbox2</a></h2> <p><a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg" data-lightbox="roadtrip"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg"/></a> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg" data-lightbox="roadtrip"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg"/></a> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg" data-lightbox="roadtrip"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg"/></a></p> <hr/> <h2 id="photoswipe"><a href="https://photoswipe.com/">PhotoSwipe</a></h2> <div class="pswp-gallery pswp-gallery--single-column" id="gallery--getting-started"> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg" data-pswp-width="1669" data-pswp-height="2500" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg" alt=""/> </a> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/7/img-2500.jpg" data-pswp-width="1875" data-pswp-height="2500" data-cropped="true" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/7/img-200.jpg" alt=""/> </a> <a href="https://unsplash.com" data-pswp-src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg" data-pswp-width="2500" data-pswp-height="1666" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg" alt=""/> </a> <div> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-2500.jpg" data-pswp-width="2500" data-pswp-height="1667" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-200.jpg" alt=""/> </a> </div> </div> <hr/> <h2 id="spotlight-js"><a href="https://nextapps-de.github.io/spotlight/">Spotlight JS</a></h2> <div class="spotlight-group"> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg"/> </a> </div> <div class="spotlight-group"> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/4/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/4/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/5/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/5/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-200.jpg"/> </a> </div> <hr/> <h2 id="venobox"><a href="https://veno.es/venobox/">Venobox</a></h2> <p><a class="venobox" data-gall="myGallery" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg"/></a> <a class="venobox" data-gall="myGallery" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg"/></a> <a class="venobox" data-gall="myGallery" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg"/></a></p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what included image galleries could look like]]></summary></entry><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://doctorraz.github.io/folio/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://doctorraz.github.io/folio/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://doctorraz.github.io/folio/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[<p>May 14, 2024 We’re introducing a series of updates across the Gemini family of models, including the new 1.5 Flash, our lightweight model for speed and efficiency, and Project Astra, our vision for the future of AI assistants. In December, we launched our first natively multimodal model Gemini 1.0 in three sizes: Ultra, Pro and Nano. Just a few months later we released 1.5 Pro, with enhanced performance and a breakthrough long context window of 1 million tokens.Developers and enterprise customers have been putting 1.5 Pro to use in incredible ways and finding its long context window, multimodal reasoning capabilities and impressive overall performance incredibly useful.We know from user feedback that some applications need lower latency and a lower cost to serve. This inspired us to keep innovating, so today, we’re introducing Gemini 1.5 Flash: a model that’s lighter-weight than 1.5 Pro, and designed to be fast and efficient to serve at scale.Both 1.5 Pro and 1.5 Flash are available in public preview with a 1 million token context window in Google AI Studio and Vertex AI. And now, 1.5 Pro is also available with a 2 million token context window via waitlist to developers using the API and to Google Cloud customers.We’re also introducing updates across the Gemini family of models, announcing our next generation of open models, Gemma 2, and sharing progress on the future of AI assistants, with Project Astra.Context lengths of leading foundation models compared with Gemini 1.5’s 2 million token capability1.5 Flash is the newest addition to the Gemini model family and the fastest Gemini model served in the API. It’s optimized for high-volume, high-frequency tasks at scale, is more cost-efficient to serve and features our breakthrough long context window.While it’s a lighter weight model than 1.5 Pro, it’s highly capable of multimodal reasoning across vast amounts of information and delivers impressive quality for its size.The new Gemini 1.5 Flash model is optimized for speed and efficiency, is highly capable of multimodal reasoning and features our breakthrough long context window.1.5 Flash excels at summarization, chat applications, image and video captioning, data extraction from long documents and tables, and more. This is because it’s been trained by 1.5 Pro through a process called “distillation,” where the most essential knowledge and skills from a larger model are transferred to a smaller, more efficient model.Read more about 1.5 Flash in our updated Gemini 1.5 technical report, on the Gemini technology page, and learn about 1.5 Flash’s availability and pricing.Over the last few months, we’ve significantly improved 1.5 Pro, our best model for general performance across a wide range of tasks.Beyond extending its context window to 2 million tokens, we’ve enhanced its code generation, logical reasoning and planning, multi-turn conversation, and audio and image understanding through data and algorithmic advances. We see strong improvements on public and internal benchmarks for each of these tasks.1.5 Pro can now follow increasingly complex and nuanced instructions, including ones that specify product-level behavior involving role, format and style. We’ve improved control over the model’s responses for specific use cases, like crafting the persona and response style of a chat agent or automating workflows through multiple function calls. And we’ve enabled users to steer model behavior by setting system instructions.We added audio understanding in the Gemini API and Google AI Studio, so 1.5 Pro can now reason across image and audio for videos uploaded in Google AI Studio. And we’re now integrating 1.5 Pro into Google products, including Gemini Advanced and in Workspace apps.Read more about 1.5 Pro in our updated Gemini 1.5 technical report and on the Gemini technology page.Gemini Nano is expanding beyond text-only inputs to include images as well. Starting with Pixel, applications using Gemini Nano with Multimodality will be able to understand the world the way people do — not just through text, but also through sight, sound and spoken language.Read more about Gemini 1.0 Nano on Android.Today, we’re also sharing a series of updates to Gemma, our family of open models built from the same research and technology used to create the Gemini models.We’re announcing Gemma 2, our next generation of open models for responsible AI innovation. Gemma 2 has a new architecture designed for breakthrough performance and efficiency, and will be available in new sizes.The Gemma family is also expanding with PaliGemma, our first vision-language model inspired by PaLI-3. And we’ve upgraded our Responsible Generative AI Toolkit with LLM Comparator for evaluating the quality of model responses.Read more on the Developer blog.As part of Google DeepMind’s mission to build AI responsibly to benefit humanity, we’ve always wanted to develop universal AI agents that can be helpful in everyday life. That’s why today, we’re sharing our progress in building the future of AI assistants with Project Astra (advanced seeing and talking responsive agent).To be truly useful, an agent needs to understand and respond to the complex and dynamic world just like people do — and take in and remember what it sees and hears to understand context and take action. It also needs to be proactive, teachable and personal, so users can talk to it naturally and without lag or delay.While we’ve made incredible progress developing AI systems that can understand multimodal information, getting response time down to something conversational is a difficult engineering challenge. Over the past few years, we’ve been working to improve how our models perceive, reason and converse to make the pace and quality of interaction feel more natural.Building on Gemini, we’ve developed prototype agents that can process information faster by continuously encoding video frames, combining the video and speech input into a timeline of events, and caching this information for efficient recall.By leveraging our leading speech models, we also enhanced how they sound, giving the agents a wider range of intonations. These agents can better understand the context they’re being used in, and respond quickly, in conversation.With technology like this, it’s easy to envision a future where people could have an expert AI assistant by their side, through a phone or glasses. And some of these capabilities are coming to Google products, like the Gemini app and web experience, later this year.We’ve made incredible progress so far with our family of Gemini models, and we’re always striving to advance the state-of-the-art even further. By investing in a relentless production line of innovation, we’re able to explore new ideas at the frontier, while also unlocking the possibility of new and exciting Gemini use cases.Learn more about Gemini and its capabilities. Your information will be used in accordance with Google’s privacy policy.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      Done. Just one step more.
    
      Check your inbox to confirm your subscription.
    You are already subscribed to our newsletter.
    You can also subscribe with a
    different email address
    
    .
    
  Let’s stay in touch. Get the latest news from Google in your inbox.
          Follow Us
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">a post with tabs</title><link href="https://doctorraz.github.io/folio/blog/2024/tabs/" rel="alternate" type="text/html" title="a post with tabs"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://doctorraz.github.io/folio/blog/2024/tabs</id><content type="html" xml:base="https://doctorraz.github.io/folio/blog/2024/tabs/"><![CDATA[<p>This is how a post with <a href="https://github.com/Ovski4/jekyll-tabs">tabs</a> looks like. Note that the tabs could be used for different purposes, not only for code.</p> <h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="3008ae98-d522-47ff-8140-12f980a07824" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="3008ae98-d522-47ff-8140-12f980a07824" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="e92b425a-3fe6-4e32-9aeb-1fd9532e47df" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="e92b425a-3fe6-4e32-9aeb-1fd9532e47df" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="90e0a7b2-e15e-48b9-b9a4-42928475c5b1" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="90e0a7b2-e15e-48b9-b9a4-42928475c5b1" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry><entry><title type="html">a post with typograms</title><link href="https://doctorraz.github.io/folio/blog/2024/typograms/" rel="alternate" type="text/html" title="a post with typograms"/><published>2024-04-29T23:36:10+00:00</published><updated>2024-04-29T23:36:10+00:00</updated><id>https://doctorraz.github.io/folio/blog/2024/typograms</id><content type="html" xml:base="https://doctorraz.github.io/folio/blog/2024/typograms/"><![CDATA[<p>This is an example post with some <a href="https://github.com/google/typograms/">typograms</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">+----+
|    |---&gt; My first diagram!
+----+</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-typograms">+----+
|    |---&gt; My first diagram!
+----+
</code></pre> <p>Another example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.</span>
<span class="p">```</span>
</code></pre></div></div> <p>which generates:</p> <pre><code class="language-typograms">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.
</code></pre> <p>For more examples, check out the <a href="https://google.github.io/typograms/#examples">typograms documentation</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included typograms code could look like]]></summary></entry><entry><title type="html">a post that can be cited</title><link href="https://doctorraz.github.io/folio/blog/2024/post-citation/" rel="alternate" type="text/html" title="a post that can be cited"/><published>2024-04-28T15:06:00+00:00</published><updated>2024-04-28T15:06:00+00:00</updated><id>https://doctorraz.github.io/folio/blog/2024/post-citation</id><content type="html" xml:base="https://doctorraz.github.io/folio/blog/2024/post-citation/"><![CDATA[<p>This is an example post that can be cited. The content of the post ends here, while the citation information is automatically provided below. The only thing needed is for you to set the <code class="language-plaintext highlighter-rouge">citation</code> key in the front matter to <code class="language-plaintext highlighter-rouge">true</code>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="citation"/><summary type="html"><![CDATA[this is what a post that can be cited looks like]]></summary></entry></feed>